---
http_interactions:
- request:
    method: get
    uri: https://api.harveyneeds.org/api/v1/needs
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Cowboy
      Date:
      - Sun, 03 Sep 2017 02:10:38 GMT
      Connection:
      - keep-alive
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - application/json; charset=utf-8
      Etag:
      - W/"daafd617904cb4aa4ecf262064fabd23"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - 4a1d71b2-8c73-4a2f-a65e-e9d7a63a84d1
      X-Runtime:
      - '0.076255'
      Vary:
      - Origin
      Transfer-Encoding:
      - chunked
      Via:
      - 1.1 vegur
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Sun, 03 Sep 2017 02:10:39 GMT
- request:
    method: get
    uri: https://hurricane-florence-api.herokuapp.com/api/v1/needs
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Cowboy
      Date:
      - Mon, 17 Sep 2018 03:34:01 GMT
      Connection:
      - keep-alive
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - application/json; charset=utf-8
      Etag:
      - W/"5625e178f67b1db7fa689b6c6fc46443"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - 8f2fadc6-2dc4-4486-991d-ee048abd9e9b
      X-Runtime:
      - '0.025663'
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      Vary:
      - Origin
      Transfer-Encoding:
      - chunked
      Via:
      - 1.1 vegur
    body:
      encoding: UTF-8
      string: '{"needs":[],"meta":{"result_count":0,"filters":{}}}'
    http_version: 
  recorded_at: Mon, 17 Sep 2018 03:34:01 GMT
- request:
    method: get
    uri: https://hurricane-florence-api.herokuapp.com/api/v1/needs
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Cowboy
      Date:
      - Mon, 17 Sep 2018 03:35:01 GMT
      Connection:
      - keep-alive
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - application/json; charset=utf-8
      Etag:
      - W/"5625e178f67b1db7fa689b6c6fc46443"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - 49867302-5fc6-4c40-aaeb-8f7868eb0bee
      X-Runtime:
      - '0.030076'
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      Vary:
      - Origin
      Transfer-Encoding:
      - chunked
      Via:
      - 1.1 vegur
    body:
      encoding: UTF-8
      string: '{"needs":[],"meta":{"result_count":0,"filters":{}}}'
    http_version: 
  recorded_at: Mon, 17 Sep 2018 03:35:01 GMT
- request:
    method: get
    uri: https://hurricane-florence-api.herokuapp.com/api/v1/needs
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Cowboy
      Date:
      - Mon, 17 Sep 2018 03:35:01 GMT
      Connection:
      - keep-alive
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - application/json; charset=utf-8
      Etag:
      - W/"5625e178f67b1db7fa689b6c6fc46443"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - ff33b4a4-457f-44df-8523-e68bb2bcfef8
      X-Runtime:
      - '0.039246'
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      Vary:
      - Origin
      Transfer-Encoding:
      - chunked
      Via:
      - 1.1 vegur
    body:
      encoding: UTF-8
      string: '{"needs":[],"meta":{"result_count":0,"filters":{}}}'
    http_version: 
  recorded_at: Mon, 17 Sep 2018 03:35:02 GMT
recorded_with: VCR 3.0.3
